1. Launch an instance from an Amazon Linux 2 or Amazon Linux AMI.
2. Connect to your instance.
3. Update the packages and package caches you have installed on your instance.
`
yum update -y

4. Install the latest Docker Engine packages.

Amazon Linux 2 amazon-linux-extras install 
docker yum install docker -y

5. Start the Docker service.

systemctl start docker 
systemctl enable docker

6. Install Conntrack:

yum install conntrack -y
yum install git -y

7. Install k8

curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

sudo install minikube-linux-amd64 /usr/local/bin/minikube


8. Start Minikube

/usr/local/bin/minikube start --force --driver=docker

/usr/local/bin/minikube version

9. Install kubectl

curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

/usr/local/bin/kubectl version 
cd /opt/
git clone https://github.com/Hussainsheriffj/springboot-k8s
ls -lsrt

10. Make the DB up
/usr/local/bin/kubectl get pods
/usr/local/bin/kubectl create -f db-deployment.yaml
/usr/local/bin/kubectl exec -it mysql-f759455cd-ncvzg /bin/bash           --to enter the container
mysql -u root -p
root                      --entered root when password was asked
show databases;
exit
exit
11.yum install maven -y	
mvn -v
12. Create the docker image

docker build -t hussainsheriffj/demo-app:1.0 .

13. docker login
hussainsheriffj then you know the password
docker image push hussainsheriffj/demo-app:1.0
/usr/local/bin/kubectl get pod

14. /usr/local/bin/kubectl  apply -f app-deployment.yaml

15. /usr/local/bin/kubectl get svc

16.  /usr/local/bin/minikube ip

17. http://52.90.76.244:8080/orders


18. PUT PORT FORWARD

/usr/local/bin/kubectl port-forward --address 0.0.0.0 svc/springboot-crud-svc 8080:8080 &

go inside ec2 instance check database
/usr/local/bin/kubectl get pod
/usr/local/bin/kubectl exec -it mysql-f759455cd-ncvzg /bin/bash               ---go inside the container
mysql -u root -p
root                      --entered root when password was asked
show databases;
use singamlabs;
show tables;
select * from orders_tbl;
add another item in postman http://52.90.76.244:8080/orders and check it reflecting on orders_tbl database;
/usr/local/bin/kubectl proxy --address='0.0.0.0' --accept-hosts='^*$'                 ----to see the dashboard
open another terminal
/usr/local/bin/minikube dashboard
http://<ec2-public-ip>:8001/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/pod?namespace=default


[HOST PORT TO CONTAINER PORT 


kubectl port-forward --address 0.0.0.0 svc/{your service name} {external port to the Internet}:{your service port, the port your app is listening on in it's container}

for example, if my service is named badstore and is listening on 80

kubectl port-forward --address 0.0.0.0 svc/badstore 8888:80


